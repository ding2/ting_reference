<?php
/**
 * @file
 * Defines the field schema and entity fields.
 */

/**
 * Implements hook_field_schema().
 */
function ting_reference_field_schema($field) {
  $columns = array();
  switch ($field['type']) {
    case 'ting_reference':
      $columns = array(
        'value' => array(
          'type' => 'varchar',
          'length' => 31,
          'not null' => FALSE,
        ),
      );
      break;
  }

  return array(
    'columns' => $columns,
  );
}

/**
 * Implements hook_ding_entity_fields().
 */
function ting_reference_ding_entity_fields() {
  return array(
    'ting_reference_reverse' => array(
      'field' => array(
        'locked' => TRUE,
        'storage' => array(
          'type' => 'virtual_field',
        ),
      ),
      'instance' => array(
        'label' => t('Nodes referencing this Ting object.'),
      ),
    ),
  );
}


/**
 * Convert blackhole field storage to virtual field.
 */
function ting_reference_update_7000() {
  return db_update('field_config')
    ->fields(array(
      'storage_type' => 'virtual_field',
      'storage_module' => 'virtual_field',
    ))
    ->condition('module', 'ting_reference')
    ->execute();
}